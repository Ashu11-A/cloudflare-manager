#!/usr/bin/env node
import { writeFile } from 'fs/promises'
import { join } from 'path'
import { Crypt } from './class/crypt.js'
import { exists } from './lib/exists.js'
import { isGlobal } from './lib/isGlobal.js'
import c from 'chalk'

if (!(await isGlobal())) {
  console.log(`⚠️  ${c.red('Warning')}!`)
  console.log(`     It is ${c.bgRed(c.black('not recommended'))} to use this module locally, ${c.bgGreen('install it globally')} with ${c.italic.underline('npm i -g cloudflare-manager')}\n`)
}

const pkgPath = join(process.cwd(), 'package.json')

if (!(await exists(pkgPath))) {
  await writeFile(pkgPath, JSON.stringify({
    version: '1.0.0',
    description: 'Generated by cloudflare-manager, for the enmap to work!'
  }, null, 2), {
    encoding: 'utf-8'
  })
}

if ((await new Crypt().read(true))?.language === undefined) await new Lang().selectLanguage()
await new Crypt().checker()

await import('./app.js')